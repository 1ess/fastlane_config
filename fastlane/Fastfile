# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do

  desc "运行测试"
  lane :tests do
    run_tests(scheme: "ZhiYun")
  end

  desc "上传到蒲公英"
  lane :beta do
    build_app(export_method: "ad-hoc")
    #输入蒲公英上传ipa包后输入的版本描述信息
    puts "请输入更新描述："
    desc = STDIN.gets
    pgyer(update_description: "#{desc}", api_key: "a10faf1d99138627355d666fd2aae02c", user_key: "651bd8102dd89603ce397c4959ab3004")
    notification(subtitle: "Finished Upload", message: "已经上传到蒲公英")
  end

  desc "发布 app store"
  lane :deploy do
    # 判断分支
    current_branch = git_branch
    current_time = Time.new;
    directory_name = current_time.strftime("%Y-%m-%d_%H-%M-%S");
    if current_branch == "release-branch" or current_branch == "old-version" or current_branch == "new-version"
      sigh
      get_push_certificate
      puts "请输入 build_number："
      custom_build_number = STDIN.gets
      increment_build_number_in_plist(target: "ZhiYun", build_number: "#{custom_build_number}")
      # puts "请输入 version_number："
      # custom_version_number = STDIN.gets
      # increment_version_number_in_plist(target: "ZhiYun", version_number: "#{custom_version_number}")
      # 指定输出目录
      gym(
        output_directory: "./build/" + directory_name + '_' + custom_build_number + '/',
        clean: true, 
      )
      # 上传所有信息到 App Store
      deliver(force: true)
      notification(subtitle: "Finished Upload", message: "已经上传到 App Store")
    else 
      notification(subtitle: "Deploy Failure", message: "注意分支！！！")
      raise "error branch"
    end
  end
end